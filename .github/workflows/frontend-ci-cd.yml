name: Frontend CI/CD Pipeline

on:
  push:
    branches: ["main", "dev"]
    paths: ["front/**"]
  pull_request:
    branches: ["main", "dev"]
    paths: ["front/**"]
  workflow_dispatch:
  workflow_call:

jobs:
  # ==========================================
  # Job: Test Frontend
  # ==========================================
  test:
    name: Run Frontend Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./front

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: "./front/package-lock.json"

      - name: Install dependencies
        run: npm ci

      # Linting/Formatting
      - name: Lint code
        run: npm run lint
        continue-on-error: true

      - name: Type check
        run: npx tsc --noEmit
        continue-on-error: true

      - name: Run unit tests
        run: npm run test -- --watch=false --browsers=ChromeHeadless
        continue-on-error: true

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-${{ github.sha }}
          path: front/coverage/
          retention-days: 30

  # ==========================================
  # Job: Build Frontend
  # ==========================================
  build:
    name: Build Frontend
    runs-on: ubuntu-latest
    if: (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev') && github.event_name == 'push'
    needs: test
    defaults:
      run:
        working-directory: ./front

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: "./front/package-lock.json"

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build --prod
        env:
          NODE_ENV: production

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-dist-${{ github.sha }}
          path: front/dist/
          retention-days: 7

  # ==========================================
  # Job: Deploy to Vercel
  # ==========================================
  deploy-vercel:
    name: Deploy to Vercel
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs: build
    environment: production

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./front
          vercel-args: "--prod"
